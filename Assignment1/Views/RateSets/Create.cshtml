@model Assignment1.Models.RateSet

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Mark us! (0 is worst and 10 is best)</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create feedback</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AgentMark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AgentMark, ViewData["MarkList"] as List<SelectListItem>, "--Select--")

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HouseMark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HouseMark, ViewData["MarkList"] as List<SelectListItem>, "--Select--")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WebSiteMark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WebSiteMark, ViewData["MarkList"] as List<SelectListItem>, "--Select--")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OverallMark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OverallMark, ViewData["MarkList"] as List<SelectListItem>, "--Select--")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to see others feedback", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
